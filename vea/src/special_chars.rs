pub const QUADRUPLE_INTEGRAL_OPERATOR: char = '⨌';
pub const FINITE_PART_INTEGRAL: char = '⨍';
pub const INTEGRAL_WITH_DOUBLE_STROKE: char = '⨎';
pub const INTEGRAL_AVERAGE_WITH_SLASH: char = '⨏';
pub const CIRCULATION_FUNCTION: char = '⨐';
pub const ANTICLOCKWISE_INTEGRATION: char = '⨑';
pub const LINE_INTEGRATION_WITH_RECTANGULAR_PATH_AROUND_POLE: char = '⨒';
pub const LINE_INTEGRATION_WITH_SEMICIRCULAR_PATH_AROUND_POLE: char = '⨓';
pub const LINE_INTEGRATION_NOT_INCLUDING_THE_POLE: char = '⨔';
pub const INTEGRAL_AROUND_A_POINT_OPERATOR: char = '⨕';
pub const QUATERNION_INTEGRAL_OPERATOR: char = '⨖';
pub const INTEGRAL_WITH_LEFTWARDS_ARROW_WITH_HOOK: char = '⨗';
pub const INTEGRAL_WITH_TIMES_SIGN: char = '⨘';
pub const INTEGRAL_WITH_INTERSECTION: char = '⨙';
pub const INTEGRAL_WITH_UNION: char = '⨚';
pub const INTEGRAL_WITH_OVERBAR: char = '⨛';
pub const INTEGRAL_WITH_UNDERBAR: char = '⨜';
pub const JOIN: char = '⨝';
pub const LARGE_LEFT_TRIANGLE_OPERATOR: char = '⨞';
pub const Z_NOTATION_SCHEMA_COMPOSITION: char = '⨟';
pub const Z_NOTATION_SCHEMA_PIPING: char = '⨠';
pub const Z_NOTATION_SCHEMA_PROJECTION: char = '⨡';
pub const PLUS_SIGN_WITH_SMALL_CIRCLE_ABOVE: char = '⨢';
pub const PLUS_SIGN_WITH_CIRCUMFLEX_ACCENT_ABOVE: char = '⨣';
pub const PLUS_SIGN_WITH_TILDE_ABOVE: char = '⨤';
pub const PLUS_SIGN_WITH_DOT_BELOW: char = '⨥';
pub const PLUS_SIGN_WITH_TILDE_BELOW: char = '⨦';
pub const PLUS_SIGN_WITH_SUBSCRIPT_TWO: char = '⨧';
pub const PLUS_SIGN_WITH_BLACK_TRIANGLE: char = '⨨';
pub const MINUS_SIGN_WITH_COMMA_ABOVE: char = '⨩';
pub const MINUS_SIGN_WITH_DOT_BELOW: char = '⨪';
pub const MINUS_SIGN_WITH_FALLING_DOTS: char = '⨫';
pub const MINUS_SIGN_WITH_RISING_DOTS: char = '⨬';
pub const PLUS_SIGN_IN_LEFT_HALF_CIRCLE: char = '⨭';
pub const PLUS_SIGN_IN_RIGHT_HALF_CIRCLE: char = '⨮';
pub const VECTOR_OR_CROSS_PRODUCT: char = '⨯';
pub const MULTIPLICATION_SIGN_WITH_DOT_ABOVE: char = '⨰';
pub const MULTIPLICATION_SIGN_WITH_UNDERBAR: char = '⨱';
pub const SEMIDIRECT_PRODUCT_WITH_BOTTOM_CLOSED: char = '⨲';
pub const SMASH_PRODUCT: char = '⨳';
pub const MULTIPLICATION_SIGN_IN_LEFT_HALF_CIRCLE: char = '⨴';
pub const MULTIPLICATION_SIGN_IN_RIGHT_HALF_CIRCLE: char = '⨵';
pub const CIRCLED_MULTIPLICATION_SIGN_WITH_CIRCUMFLEX_ACCENT: char = '⨶';
pub const MULTIPLICATION_SIGN_IN_DOUBLE_CIRCLE: char = '⨷';
pub const CIRCLED_DIVISION_SIGN: char = '⨸';
pub const PLUS_SIGN_IN_TRIANGLE: char = '⨹';
pub const MINUS_SIGN_IN_TRIANGLE: char = '⨺';
pub const MULTIPLICATION_SIGN_IN_TRIANGLE: char = '⨻';
pub const INTERIOR_PRODUCT: char = '⨼';
pub const RIGHTHAND_INTERIOR_PRODUCT: char = '⨽';
pub const Z_NOTATION_RELATIONAL_COMPOSITION: char = '⨾';
pub const AMALGAMATION_OR_COPRODUCT: char = '⨿';
pub const INTERSECTION_WITH_DOT: char = '⩀';
pub const UNION_WITH_MINUS_SIGN: char = '⩁';
pub const UNION_WITH_OVERBAR: char = '⩂';
pub const INTERSECTION_WITH_OVERBAR: char = '⩃';
pub const INTERSECTION_WITH_LOGICAL_AND: char = '⩄';
pub const UNION_WITH_LOGICAL_OR: char = '⩅';
pub const UNION_ABOVE_INTERSECTION: char = '⩆';
pub const INTERSECTION_ABOVE_UNION: char = '⩇';
pub const UNION_ABOVE_BAR_ABOVE_INTERSECTION: char = '⩈';
pub const INTERSECTION_ABOVE_BAR_ABOVE_UNION: char = '⩉';
pub const UNION_BESIDE_AND_JOINED_WITH_UNION: char = '⩊';
pub const INTERSECTION_BESIDE_AND_JOINED_WITH_INTERSECTION: char = '⩋';
pub const CLOSED_UNION_WITH_SERIFS: char = '⩌';
pub const CLOSED_INTERSECTION_WITH_SERIFS: char = '⩍';
pub const DOUBLE_SQUARE_INTERSECTION: char = '⩎';
pub const DOUBLE_SQUARE_UNION: char = '⩏';
pub const CLOSED_UNION_WITH_SERIFS_AND_SMASH_PRODUCT: char = '⩐';
pub const LOGICAL_AND_WITH_DOT_ABOVE: char = '⩑';
pub const LOGICAL_OR_WITH_DOT_ABOVE: char = '⩒';
pub const DOUBLE_LOGICAL_AND: char = '⩓';
pub const DOUBLE_LOGICAL_OR: char = '⩔';
pub const TWO_INTERSECTING_LOGICAL_AND: char = '⩕';
pub const TWO_INTERSECTING_LOGICAL_OR: char = '⩖';
pub const SLOPING_LARGE_OR: char = '⩗';
pub const SLOPING_LARGE_AND: char = '⩘';
pub const LOGICAL_OR_OVERLAPPING_LOGICAL_AND: char = '⩙';
pub const LOGICAL_AND_WITH_MIDDLE_STEM: char = '⩚';
pub const LOGICAL_OR_WITH_MIDDLE_STEM: char = '⩛';
pub const LOGICAL_AND_WITH_HORIZONTAL_DASH: char = '⩜';
pub const LOGICAL_OR_WITH_HORIZONTAL_DASH: char = '⩝';
pub const LOGICAL_AND_WITH_DOUBLE_OVERBAR: char = '⩞';
pub const LOGICAL_AND_WITH_UNDERBAR: char = '⩟';
pub const LOGICAL_AND_WITH_DOUBLE_UNDERBAR: char = '⩠';
pub const SMALL_VEE_WITH_UNDERBAR: char = '⩡';
pub const LOGICAL_OR_WITH_DOUBLE_OVERBAR: char = '⩢';
pub const LOGICAL_OR_WITH_DOUBLE_UNDERBAR: char = '⩣';
pub const Z_NOTATION_DOMAIN_ANTIRESTRICTION: char = '⩤';
pub const Z_NOTATION_RANGE_ANTIRESTRICTION: char = '⩥';
pub const EQUALS_SIGN_WITH_DOT_BELOW: char = '⩦';
pub const IDENTICAL_WITH_DOT_ABOVE: char = '⩧';
pub const TRIPLE_HORIZONTAL_BAR_WITH_DOUBLE_VERTICAL_STROKE: char = '⩨';
pub const TRIPLE_HORIZONTAL_BAR_WITH_TRIPLE_VERTICAL_STROKE: char = '⩩';
pub const TILDE_OPERATOR_WITH_DOT_ABOVE: char = '⩪';
pub const TILDE_OPERATOR_WITH_RISING_DOTS: char = '⩫';
pub const SIMILAR_MINUS_SIMILAR: char = '⩬';
pub const CONGRUENT_WITH_DOT_ABOVE: char = '⩭';
pub const EQUALS_WITH_ASTERISK: char = '⩮';
pub const ALMOST_EQUAL_TO_WITH_CIRCUMFLEX_ACCENT: char = '⩯';
pub const APPROXIMATELY_EQUAL_OR_EQUAL_TO: char = '⩰';
pub const EQUALS_SIGN_ABOVE_PLUS_SIGN: char = '⩱';
pub const PLUS_SIGN_ABOVE_EQUALS_SIGN: char = '⩲';
pub const EQUALS_SIGN_ABOVE_TILDE_OPERATOR: char = '⩳';
pub const DOUBLE_COLON_EQUAL: char = '⩴';
pub const TWO_CONSECUTIVE_EQUALS_SIGNS: char = '⩵';
pub const THREE_CONSECUTIVE_EQUALS_SIGNS: char = '⩶';
pub const EQUALS_SIGN_WITH_TWO_DOTS_ABOVE_AND_TWO_DOTS_BELOW: char = '⩷';
pub const EQUIVALENT_WITH_FOUR_DOTS_ABOVE: char = '⩸';
pub const LESS_THAN_WITH_CIRCLE_INSIDE: char = '⩹';
pub const GREATER_THAN_WITH_CIRCLE_INSIDE: char = '⩺';
pub const LESS_THAN_WITH_QUESTION_MARK_ABOVE: char = '⩻';
pub const GREATER_THAN_WITH_QUESTION_MARK_ABOVE: char = '⩼';
pub const LESS_THAN_OR_SLANTED_EQUAL_TO: char = '⩽';
pub const GREATER_THAN_OR_SLANTED_EQUAL_TO: char = '⩾';
pub const LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE: char = '⩿';
pub const GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE: char = '⪀';
pub const LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE: char = '⪁';
pub const GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE: char = '⪂';
pub const LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_RIGHT: char = '⪃';
pub const GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_LEFT: char = '⪄';
pub const LESS_THAN_OR_APPROXIMATE: char = '⪅';
pub const GREATER_THAN_OR_APPROXIMATE: char = '⪆';
pub const LESS_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO: char = '⪇';
pub const GREATER_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO: char = '⪈';
pub const LESS_THAN_AND_NOT_APPROXIMATE: char = '⪉';
pub const GREATER_THAN_AND_NOT_APPROXIMATE: char = '⪊';
pub const LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_GREATER_THAN: char = '⪋';
pub const GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_LESS_THAN: char = '⪌';
pub const LESS_THAN_ABOVE_SIMILAR_OR_EQUAL: char = '⪍';
pub const GREATER_THAN_ABOVE_SIMILAR_OR_EQUAL: char = '⪎';
pub const LESS_THAN_ABOVE_SIMILAR_ABOVE_GREATER_THAN: char = '⪏';
pub const GREATER_THAN_ABOVE_SIMILAR_ABOVE_LESS_THAN: char = '⪐';
pub const LESS_THAN_ABOVE_GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL: char = '⪑';
pub const GREATER_THAN_ABOVE_LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL: char = '⪒';
pub const LESS_THAN_ABOVE_SLANTED_EQUAL_ABOVE_GREATER_THAN_ABOVE_SLANTED_EQUAL: char = '⪓';
pub const GREATER_THAN_ABOVE_SLANTED_EQUAL_ABOVE_LESS_THAN_ABOVE_SLANTED_EQUAL: char = '⪔';
pub const SLANTED_EQUAL_TO_OR_LESS_THAN: char = '⪕';
pub const SLANTED_EQUAL_TO_OR_GREATER_THAN: char = '⪖';
pub const SLANTED_EQUAL_TO_OR_LESS_THAN_WITH_DOT_INSIDE: char = '⪗';
pub const SLANTED_EQUAL_TO_OR_GREATER_THAN_WITH_DOT_INSIDE: char = '⪘';
pub const DOUBLE_LINE_EQUAL_TO_OR_LESS_THAN: char = '⪙';
pub const DOUBLE_LINE_EQUAL_TO_OR_GREATER_THAN: char = '⪚';
pub const DOUBLE_LINE_SLANTED_EQUAL_TO_OR_LESS_THAN: char = '⪛';
pub const DOUBLE_LINE_SLANTED_EQUAL_TO_OR_GREATER_THAN: char = '⪜';
pub const SIMILAR_OR_LESS_THAN: char = '⪝';
pub const SIMILAR_OR_GREATER_THAN: char = '⪞';
pub const SIMILAR_ABOVE_LESS_THAN_ABOVE_EQUALS_SIGN: char = '⪟';
pub const SIMILAR_ABOVE_GREATER_THAN_ABOVE_EQUALS_SIGN: char = '⪠';
pub const DOUBLE_NESTED_LESS_THAN: char = '⪡';
pub const DOUBLE_NESTED_GREATER_THAN: char = '⪢';
pub const DOUBLE_NESTED_LESS_THAN_WITH_UNDERBAR: char = '⪣';
pub const GREATER_THAN_OVERLAPPING_LESS_THAN: char = '⪤';
pub const GREATER_THAN_BESIDE_LESS_THAN: char = '⪥';
pub const LESS_THAN_CLOSED_BY_CURVE: char = '⪦';
pub const GREATER_THAN_CLOSED_BY_CURVE: char = '⪧';
pub const LESS_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL: char = '⪨';
pub const GREATER_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL: char = '⪩';
pub const SMALLER_THAN: char = '⪪';
pub const LARGER_THAN: char = '⪫';
pub const SMALLER_THAN_OR_EQUAL_TO: char = '⪬';
pub const LARGER_THAN_OR_EQUAL_TO: char = '⪭';
pub const EQUALS_SIGN_WITH_BUMPY_ABOVE: char = '⪮';
pub const PRECEDES_ABOVE_SINGLE_LINE_EQUALS_SIGN: char = '⪯';
pub const SUCCEEDS_ABOVE_SINGLE_LINE_EQUALS_SIGN: char = '⪰';
pub const PRECEDES_ABOVE_SINGLE_LINE_NOT_EQUAL_TO: char = '⪱';
pub const SUCCEEDS_ABOVE_SINGLE_LINE_NOT_EQUAL_TO: char = '⪲';
pub const PRECEDES_ABOVE_EQUALS_SIGN: char = '⪳';
pub const SUCCEEDS_ABOVE_EQUALS_SIGN: char = '⪴';
pub const PRECEDES_ABOVE_NOT_EQUAL_TO: char = '⪵';
pub const SUCCEEDS_ABOVE_NOT_EQUAL_TO: char = '⪶';
pub const PRECEDES_ABOVE_ALMOST_EQUAL_TO: char = '⪷';
pub const SUCCEEDS_ABOVE_ALMOST_EQUAL_TO: char = '⪸';
pub const PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO: char = '⪹';
pub const SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO: char = '⪺';
pub const DOUBLE_PRECEDES: char = '⪻';
pub const DOUBLE_SUCCEEDS: char = '⪼';
pub const SUBSET_WITH_DOT: char = '⪽';
pub const SUPERSET_WITH_DOT: char = '⪾';
pub const SUBSET_WITH_PLUS_SIGN_BELOW: char = '⪿';
pub const SUPERSET_WITH_PLUS_SIGN_BELOW: char = '⫀';
pub const SUBSET_WITH_MULTIPLICATION_SIGN_BELOW: char = '⫁';
pub const SUPERSET_WITH_MULTIPLICATION_SIGN_BELOW: char = '⫂';
pub const SUBSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE: char = '⫃';
pub const SUPERSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE: char = '⫄';
pub const SUBSET_OF_ABOVE_EQUALS_SIGN: char = '⫅';
pub const SUPERSET_OF_ABOVE_EQUALS_SIGN: char = '⫆';
pub const SUBSET_OF_ABOVE_TILDE_OPERATOR: char = '⫇';
pub const SUPERSET_OF_ABOVE_TILDE_OPERATOR: char = '⫈';
pub const SUBSET_OF_ABOVE_ALMOST_EQUAL_TO: char = '⫉';
pub const SUPERSET_OF_ABOVE_ALMOST_EQUAL_TO: char = '⫊';
pub const SUBSET_OF_ABOVE_NOT_EQUAL_TO: char = '⫋';
pub const SUPERSET_OF_ABOVE_NOT_EQUAL_TO: char = '⫌';
pub const SQUARE_LEFT_OPEN_BOX_OPERATOR: char = '⫍';
pub const SQUARE_RIGHT_OPEN_BOX_OPERATOR: char = '⫎';
pub const CLOSED_SUBSET: char = '⫏';
pub const CLOSED_SUPERSET: char = '⫐';
pub const CLOSED_SUBSET_OR_EQUAL_TO: char = '⫑';
pub const CLOSED_SUPERSET_OR_EQUAL_TO: char = '⫒';
pub const SUBSET_ABOVE_SUPERSET: char = '⫓';
pub const SUPERSET_ABOVE_SUBSET: char = '⫔';
pub const SUBSET_ABOVE_SUBSET: char = '⫕';
pub const SUPERSET_ABOVE_SUPERSET: char = '⫖';
pub const SUPERSET_BESIDE_SUBSET: char = '⫗';
pub const SUPERSET_BESIDE_AND_JOINED_BY_DASH_WITH_SUBSET: char = '⫘';
pub const ELEMENT_OF_OPENING_DOWNWARDS: char = '⫙';
pub const PITCHFORK_WITH_TEE_TOP: char = '⫚';
pub const TRANSVERSAL_INTERSECTION: char = '⫛';
pub const FORKING: char = '⫝̸';
pub const NONFORKING: char = '⫝';
pub const SHORT_LEFT_TACK: char = '⫞';
pub const SHORT_DOWN_TACK: char = '⫟';
pub const SHORT_UP_TACK: char = '⫠';
pub const PERPENDICULAR_WITH_S: char = '⫡';
pub const VERTICAL_BAR_TRIPLE_RIGHT_TURNSTILE: char = '⫢';
pub const DOUBLE_VERTICAL_BAR_LEFT_TURNSTILE: char = '⫣';
pub const VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE: char = '⫤';
pub const DOUBLE_VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE: char = '⫥';
pub const LONG_DASH_FROM_LEFT_MEMBER_OF_DOUBLE_VERTICAL: char = '⫦';
pub const SHORT_DOWN_TACK_WITH_OVERBAR: char = '⫧';
pub const SHORT_UP_TACK_WITH_UNDERBAR: char = '⫨';
pub const SHORT_UP_TACK_ABOVE_SHORT_DOWN_TACK: char = '⫩';
pub const DOUBLE_DOWN_TACK: char = '⫪';
pub const DOUBLE_UP_TACK: char = '⫫';
pub const DOUBLE_STROKE_NOT_SIGN: char = '⫬';
pub const REVERSED_DOUBLE_STROKE_NOT_SIGN: char = '⫭';
pub const DOES_NOT_DIVIDE_WITH_REVERSED_NEGATION_SLASH: char = '⫮';
pub const VERTICAL_LINE_WITH_CIRCLE_ABOVE: char = '⫯';
pub const VERTICAL_LINE_WITH_CIRCLE_BELOW: char = '⫰';
pub const DOWN_TACK_WITH_CIRCLE_BELOW: char = '⫱';
pub const PARALLEL_WITH_HORIZONTAL_STROKE: char = '⫲';
pub const PARALLEL_WITH_TILDE_OPERATOR: char = '⫳';
pub const TRIPLE_VERTICAL_BAR_BINARY_RELATION: char = '⫴';
pub const TRIPLE_VERTICAL_BAR_WITH_HORIZONTAL_STROKE: char = '⫵';
pub const TRIPLE_COLON_OPERATOR: char = '⫶';
pub const TRIPLE_NESTED_LESS_THAN: char = '⫷';
pub const TRIPLE_NESTED_GREATER_THAN: char = '⫸';
pub const DOUBLE_LINE_SLANTED_LESS_THAN_OR_EQUAL_TO: char = '⫹';
pub const DOUBLE_LINE_SLANTED_GREATER_THAN_OR_EQUAL_TO: char = '⫺';
pub const TRIPLE_SOLIDUS_BINARY_RELATION: char = '⫻';
pub const LARGE_TRIPLE_VERTICAL_BAR_OPERATOR: char = '⫼';
pub const DOUBLE_SOLIDUS_OPERATOR: char = '⫽';
pub const WHITE_VERTICAL_BAR: char = '⫾';
pub const N_ARY_WHITE_VERTICAL_BAR: char = '⫿';
pub const LEFT_ARROW_WITH_SMALL_CIRCLE: char = '⬰';
pub const THREE_LEFTWARDS_ARROWS: char = '⬱';
pub const LEFT_ARROW_WITH_CIRCLED_PLUS: char = '⬲';
pub const LONG_LEFTWARDS_SQUIGGLE_ARROW: char = '⬳';
pub const LEFTWARDS_TWO_HEADED_ARROW_WITH_VERTICAL_STROKE: char = '⬴';
pub const LEFTWARDS_TWO_HEADED_ARROW_WITH_DOUBLE_VERTICAL_STROKE: char = '⬵';
pub const LEFTWARDS_TWO_HEADED_ARROW_FROM_BAR: char = '⬶';
pub const LEFTWARDS_TWO_HEADED_TRIPLE_DASH_ARROW: char = '⬷';
pub const LEFTWARDS_ARROW_WITH_DOTTED_STEM: char = '⬸';
pub const LEFTWARDS_ARROW_WITH_TAIL_WITH_VERTICAL_STROKE: char = '⬹';
pub const LEFTWARDS_ARROW_WITH_TAIL_WITH_DOUBLE_VERTICAL_STROKE: char = '⬺';
pub const LEFTWARDS_TWO_HEADED_ARROW_WITH_TAIL: char = '⬻';
pub const LEFTWARDS_TWO_HEADED_ARROW_WITH_TAIL_WITH_VERTICAL_STROKE: char = '⬼';
pub const LEFTWARDS_TWO_HEADED_ARROW_WITH_TAIL_WITH_DOUBLE_VERTICAL_STROKE: char = '⬽';
pub const LEFTWARDS_ARROW_THROUGH_X: char = '⬾';
pub const WAVE_ARROW_POINTING_DIRECTLY_LEFT: char = '⬿';
pub const EQUALS_SIGN_ABOVE_LEFTWARDS_ARROW: char = '⭀';
pub const REVERSE_TILDE_OPERATOR_ABOVE_LEFTWARDS_ARROW: char = '⭁';
pub const LEFTWARDS_ARROW_ABOVE_REVERSE_ALMOST_EQUAL_TO: char = '⭂';
pub const RIGHTWARDS_ARROW_THROUGH_GREATER_THAN: char = '⭃';
pub const RIGHTWARDS_ARROW_THROUGH_SUPERSET: char = '⭄';
pub const REVERSE_TILDE_OPERATOR_ABOVE_RIGHTWARDS_ARROW: char = '⭇';
pub const RIGHTWARDS_ARROW_ABOVE_REVERSE_ALMOST_EQUAL_TO: char = '⭈';
pub const TILDE_OPERATOR_ABOVE_LEFTWARDS_ARROW: char = '⭉';
pub const LEFTWARDS_ARROW_ABOVE_ALMOST_EQUAL_TO: char = '⭊';
pub const LEFTWARDS_ARROW_ABOVE_REVERSE_TILDE_OPERATOR: char = '⭋';
pub const RIGHTWARDS_ARROW_ABOVE_REVERSE_TILDE_OPERATOR: char = '⭌';
pub const HEBREW_LETTER_ALTERNATIVE_PLUS_SIGN: char = '﬩';
pub const SMALL_PLUS_SIGN: char = '﹢';
pub const SMALL_LESS_THAN_SIGN: char = '﹤';
pub const SMALL_GREATER_THAN_SIGN: char = '﹥';
pub const SMALL_EQUALS_SIGN: char = '﹦';
pub const FULLWIDTH_PLUS_SIGN: char = '＋';
pub const FULLWIDTH_LESS_THAN_SIGN: char = '＜';
pub const FULLWIDTH_EQUALS_SIGN: char = '＝';
pub const FULLWIDTH_GREATER_THAN_SIGN: char = '＞';
pub const FULLWIDTH_VERTICAL_LINE: char = '｜';
pub const FULLWIDTH_TILDE: char = '～';
pub const FULLWIDTH_NOT_SIGN: char = '￢';
pub const HALFWIDTH_LEFTWARDS_ARROW: char = '￩';
pub const HALFWIDTH_UPWARDS_ARROW: char = '￪';
pub const HALFWIDTH_RIGHTWARDS_ARROW: char = '￫';
pub const HALFWIDTH_DOWNWARDS_ARROW: char = '￬';
pub const MATHEMATICAL_BOLD_NABLA: char = '𝛁';
pub const MATHEMATICAL_BOLD_PARTIAL_DIFFERENTIAL: char = '𝛛';
pub const MATHEMATICAL_ITALIC_NABLA: char = '𝛻';
pub const MATHEMATICAL_ITALIC_PARTIAL_DIFFERENTIAL: char = '𝜕';
pub const MATHEMATICAL_BOLD_ITALIC_NABLA: char = '𝜵';
pub const MATHEMATICAL_BOLD_ITALIC_PARTIAL_DIFFERENTIAL: char = '𝝏';
pub const MATHEMATICAL_SANS_SERIF_BOLD_NABLA: char = '𝝯';
pub const MATHEMATICAL_SANS_SERIF_BOLD_PARTIAL_DIFFERENTIAL: char = '𝞉';
pub const MATHEMATICAL_SANS_SERIF_BOLD_ITALIC_NABLA: char = '𝞩';
pub const MATHEMATICAL_SANS_SERIF_BOLD_ITALIC_PARTIAL_DIFFERENTIAL: char = '𝟃';
